{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["QRCode","require","App","useState","repo","setRepo","currentpage","setcurrentpage","perpage","name","url","firstvalue","setfirstvalue","useEffect","axios","get","then","res","data","html_url","console","log","indexOfLast","indexOfFirst","current","slice","pagenum","Math","round","length","items","number","push","Pagination","Item","active","onClick","style","backgroundColor","paddingBottom","Jumbotron","fluid","color","Container","Row","Col","xs","lg","justifyContent","alignItems","padding","md","marginTop","Card","Body","Title","opacity","Button","variant","href","margin","Tab","id","defaultActiveKey","sm","ListGroup","map","i","v","action","alignSelf","Content","Pane","eventKey","Badge","language","fontSize","created_at","value","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63706104.chunk.js","sourcesContent":["import './App.css';\nimport React,{useState,useEffect} from 'react';\nimport { IoIosCafe ,IoMdMail,IoMdCall } from 'react-icons/io';\nimport { Button ,Card,Container,Row,Col,Jumbotron,Image,ListGroup,Tab,Pagination,Badge } from 'react-bootstrap';\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar QRCode = require('qrcode.react');\n\nexport default function App() {\n\n  let [repo,setRepo]=useState([])\n  const [currentpage,setcurrentpage] = useState(1)\n  const [perpage,setperpage] = useState(3)\n  let [firstvalue,setfirstvalue] = useState({name:\"\",url:\"\"})\n  \n\n  useEffect(()=>{\n  \n      axios.get(\"https://api.github.com/users/phongsmm/repos\")\n      .then((res)=> {setRepo(res.data) \n                    setfirstvalue({name:res.data[0].name,url:res.data[0].html_url})} )\n      \n      \n    \n      \n    \n  },[])\n\n\n  console.log(`#${firstvalue.name}`)\n\n\n\n  const indexOfLast = currentpage * perpage;\n  const indexOfFirst = indexOfLast - perpage;\n  const current = repo.slice(indexOfFirst,indexOfLast)\n  const pagenum = Math.round(repo.length/perpage)\n  let items = [];\n  for (let number = 1; number <= pagenum; number++) {\n    items.push(\n      <Pagination.Item key={number} active={number === currentpage} onClick={()=>setcurrentpage(number)}>\n        {number}\n      </Pagination.Item>,\n    );\n  }\n\n\n\n  \n\n\n\n  return (\n<div style={{backgroundColor:'#00917c',paddingBottom:10}}>\n   \n\n<Jumbotron fluid style={{backgroundColor:'#433520',color:'#fde8cd'}}>\n  <Container>\n    <Row>\n      <Col xs lg={2} style={{justifyContent:'center',alignItems:'center',padding:2}}>\n      </Col>\n      <Col md=\"auto\">\n      <h1>Phongpisut Meemuk <IoIosCafe color=\"#f8f5f1\"/> </h1>\n    <p>\n      Everyday is learning\n    </p>\n      </Col>\n    </Row>\n  \n   \n  </Container>\n</Jumbotron>\n\n<Container>\n  \n<Row style={{marginTop:20}}>\n    <Col>    <Card>\n  <Card.Body>\n    <Card.Title>Info</Card.Title>\n    <h4>Education </h4>\n    <p style={{opacity:0.8}}>Thai-Nichi Institute of Technology\nFaculty :  Information Technology (B.Sc.)</p>\n<p style={{opacity:0.8}}>[ Bachelor ]  GPAX 3.45</p>\n<p style={{opacity:0.8}}>      TOEIC : 625</p>\n<h4>Internship </h4>\n<p style={{opacity:0.8}}>IBMSD TH (Application Service Management Side)</p>\n \n    <Row >\n  \n      <Button variant=\"primary\" href=\"mailto: me.phongpisut_st@tni.ac.th\" style={{margin:5}}>Email <IoMdMail/> </Button>\n\n      <Button variant=\"success\" href=\"tel:+660965342482\" style={{margin:5}}>Call : 0965342482 <IoMdCall/> </Button>\n\n    </Row>\n    \n    \n  </Card.Body>\n</Card>\n</Col>\n\n\n    {firstvalue.name!=\"\"?    <Col><Card style={{ marginTop:10 }}>\n  <Card.Body>\n    <Card.Title>Github Repository</Card.Title>\n    <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey={`#${firstvalue.name}`}>\n  <Row>\n    <Col sm={4}>\n      <ListGroup>\n      {current.map((i,v)=>        \n      <ListGroup.Item action href={`#${i.name}`}  key={`${i.name}`} >\n          {` ID ${i.id}`}\n        </ListGroup.Item> )}\n\n      </ListGroup>\n      <Pagination style={{alignSelf:'center' , marginTop:5}}>{items}</Pagination>\n    </Col>\n    <Col sm={8}>\n\n      <Tab.Content>\n      {repo.map((i,v)=>\n      <Tab.Pane eventKey={`#${i.name}`} key={`${i.name}`}>\n            <Container>\n              <Row>\n           \n              <Col xs={6}>\n                <Row><a href={i.html_url}>{i.name}</a></Row>\n                <Row> <Badge variant=\"info\">{i.language}</Badge> </Row>\n                <Row style={{opacity:0.6,fontSize:12}}> Created at : {i.created_at}  </Row>\n                \n              </Col>\n              <Col md=\"auto\" style={{justifyContent:'center',alignItems:'end'}}> \n              <QRCode value={i.html_url} size={80}/>\n              </Col>\n            </Row>\n            </Container>\n  \n          </Tab.Pane>)}\n            \n\n      </Tab.Content>\n    </Col>\n  </Row>\n</Tab.Container>\n    \n\n  </Card.Body>\n</Card></Col>:null}\n  </Row>\n</Container>\n  </div>\n\n\n\n\n\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}